# D. Given a list of numbers, return a list where
# all adjacent == elements have been reduced to a single element,
# so [1, 2, 2, 3] returns [1, 2, 3]. You may create a new list or
# modify the passed in list.
Numbers = [1,2,2,3]
def remove_adjacent_duplicates(Numbers):
    return [Numbers[i] for i in range(len(Numbers)) if i == 0 or Numbers[i] != Numbers[i - 1]]
result = remove_adjacent_duplicates(Numbers)
print(result)

# E. Given two lists sorted in increasing order, create and return a merged
# list of all the elements in sorted order. You may modify the passed in lists.
# Ideally, the solution should work in "linear" time, making a single
# pass of both lists.

Work = [3,7,6,8]
Work1 = [2,1,4,5]
Work.sort() #Sorts work
Work1.sort()
print(Work)
print(Work1)
combined_sorted = sorted(Work + Work1)
print(combined_sorted)
